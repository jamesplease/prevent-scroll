{"version":3,"sources":["prevent-scroll.min.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","disabled","currentPosition","currentOverflow","currentWidth","on","htmlEl","document","querySelector","body","window","innerHeight","scrollHeight","bodyScrollTop","scrollTop","htmlScrollTop","style","position","overflowY","width","top","off","parseInt"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,gBAAZC,UAA0C,gBAAXC,QACxCA,OAAOD,QAAUD,IACQ,kBAAXG,SAAyBA,OAAOC,IAC9CD,UAAWH,GACe,gBAAZC,SACdA,QAAuB,cAAID,IAE3BD,EAAoB,cAAIC,KACvBK,KAAM,WACT,MAAgB,UAAUC,GAKhB,QAASC,GAAoBC,GAG5B,GAAGC,EAAiBD,GACnB,MAAOC,GAAiBD,GAAUP,OAGnC,IAAIC,GAASO,EAAiBD,IAC7BP,WACAS,GAAIF,EACJG,QAAQ,EAUT,OANAL,GAAQE,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOS,QAAS,EAGTT,EAAOD,QAvBf,GAAIQ,KAqCJ,OATAF,GAAoBM,EAAIP,EAGxBC,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,GAGjBR,EAAoB,KAK/B,SAASL,EAAQD,GAEtB,YAEAe,QAAOC,eAAehB,EAAS,cAC7BiB,OAAO,GAET,IAAIC,IAAW,EACXC,EAAkB,OAClBC,EAAkB,OAClBC,EAAe,MAEnBrB,GAAAA,YACEsB,GAAI,WACF,IAAIJ,EAAJ,CAIAA,GAAW,CAEX,IAAIK,GAASC,SAASC,cAAc,QAChCC,EAAOF,SAASE,IAMpB,MAAIC,OAAOC,aAAeF,EAAKG,cAA/B,CAMA,GAAIC,GAAgBJ,EAAKK,UACrBC,EAAgBT,EAAOQ,UACvBA,EAAYD,EAAgBA,EAAgBE,CAIhDb,GAAkBI,EAAOU,MAAMC,SAC/Bd,EAAkBG,EAAOU,MAAME,UAC/Bd,EAAeE,EAAOU,MAAMG,MAI5Bb,EAAOU,MAAMC,SAAW,QAIxBX,EAAOU,MAAME,UAAY,SAGzBZ,EAAOU,MAAMG,MAAQ,OAGrBb,EAAOU,MAAMI,IAAM,IAAMN,EAAY,QAEvCO,IAAK,WACH,GAAKpB,EAAL,CAIAA,GAAW,CAEX,IAAIK,GAASC,SAASC,cAAc,QAChCC,EAAOF,SAASE,IAGpBH,GAAOU,MAAMC,SAAWf,EACxBI,EAAOU,MAAME,UAAYf,EACzBG,EAAOU,MAAMG,MAAQf,CAGrB,IAAIU,IAAaQ,SAAShB,EAAOU,MAAMI,IAGvCd,GAAOQ,UAAYA,EACnBL,EAAKK,UAAYA","file":"prevent-scroll.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"preventScroll\"] = factory();\n\telse\n\t\troot[\"preventScroll\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar disabled = false;\n\tvar currentPosition = void 0,\n\t    currentOverflow = void 0,\n\t    currentWidth = void 0;\n\t\n\texports.default = {\n\t  on: function on() {\n\t    if (disabled) {\n\t      return;\n\t    }\n\t\n\t    disabled = true;\n\t\n\t    var htmlEl = document.querySelector('html');\n\t    var body = document.body;\n\t\n\t    // `window.innerHeight` is the height of the viewport\n\t    // `body.scrollHeight` is the height of the document\n\t    // If the document fits in the window, then the document cannot be scrolled,\n\t    // and we don't need to do anything.\n\t    if (window.innerHeight >= body.scrollHeight) {\n\t      return;\n\t    }\n\t\n\t    // Determine the `scrollTop` to use. Some browsers require checking the\n\t    // `body`, others use `html`.\n\t    var bodyScrollTop = body.scrollTop;\n\t    var htmlScrollTop = htmlEl.scrollTop;\n\t    var scrollTop = bodyScrollTop ? bodyScrollTop : htmlScrollTop;\n\t\n\t    // Store the current value of the htmlEl's styles â€“ we're about to override\n\t    // them.\n\t    currentPosition = htmlEl.style.position;\n\t    currentOverflow = htmlEl.style.overflowY;\n\t    currentWidth = htmlEl.style.width;\n\t\n\t    // Fixing the position of the `htmlEl` prevents the page from scrolling\n\t    // at all.\n\t    htmlEl.style.position = 'fixed';\n\t    // Setting `overflowY` to `scroll` ensures that any scrollbars that are\n\t    // around stick around. Otherwise, there would be a \"jump\" when the page\n\t    // becomes unscrollable as the bar would vanish.\n\t    htmlEl.style.overflowY = 'scroll';\n\t    // This makes sure that the page doesn't collapse (usually your CSS will\n\t    // prevent this, but it's best to be safe)\n\t    htmlEl.style.width = '100%';\n\t    // Scoot down the `htmlEl` to be in the same place that the user had\n\t    // scrolled to.\n\t    htmlEl.style.top = '-' + scrollTop + 'px';\n\t  },\n\t  off: function off() {\n\t    if (!disabled) {\n\t      return;\n\t    }\n\t\n\t    disabled = false;\n\t\n\t    var htmlEl = document.querySelector('html');\n\t    var body = document.body;\n\t\n\t    // Reset `htmlEl` to the original styles.\n\t    htmlEl.style.position = currentPosition;\n\t    htmlEl.style.overflowY = currentOverflow;\n\t    htmlEl.style.width = currentWidth;\n\t\n\t    // Retrieve our original scrollTop from the htmlEl's top\n\t    var scrollTop = -parseInt(htmlEl.style.top);\n\t    // Return us to the original scroll position. Once again, we set this on\n\t    // both the `body` and the `htmlEl` to be safe.\n\t    htmlEl.scrollTop = scrollTop;\n\t    body.scrollTop = scrollTop;\n\t  }\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=prevent-scroll.js.map"]}