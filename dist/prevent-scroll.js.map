{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b32a68a8b95d80aa06c3","webpack:///./src/prevent-scroll.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;ACtCA,KAAI,WAAW,KAAf;AACA,KAAI,wBAAJ;AAAA,KAAqB,wBAArB;AAAA,KAAsC,qBAAtC;;mBAEe;AACb,KADa,gBACR;AACH,SAAI,QAAJ,EAAc;AACZ;AACD;;AAED,gBAAW,IAAX;;AAEA,SAAM,SAAS,SAAS,aAAT,CAAuB,MAAvB,CAAf;AACA,SAAM,OAAO,SAAS,IAAtB;;;;;;AAMA,SAAI,OAAO,WAAP,IAAsB,KAAK,YAA/B,EAA6C;AAC3C;AACD;;;;AAID,SAAM,gBAAgB,KAAK,SAA3B;AACA,SAAM,gBAAgB,OAAO,SAA7B;AACA,SAAI,YAAY,gBAAgB,aAAhB,GAAgC,aAAhD;;;;AAIA,uBAAkB,OAAO,KAAP,CAAa,QAA/B;AACA,uBAAkB,OAAO,KAAP,CAAa,SAA/B;AACA,oBAAe,OAAO,KAAP,CAAa,KAA5B;;;;AAIA,YAAO,KAAP,CAAa,QAAb,GAAwB,OAAxB;;;;AAIA,YAAO,KAAP,CAAa,SAAb,GAAyB,QAAzB;;;AAGA,YAAO,KAAP,CAAa,KAAb,GAAqB,MAArB;;;AAGA,YAAO,KAAP,CAAa,GAAb,SAAuB,SAAvB;AACD,IA5CY;AA8Cb,MA9Ca,iBA8CP;AACJ,SAAI,CAAC,QAAL,EAAe;AACb;AACD;;AAED,gBAAW,KAAX;;AAEA,SAAM,SAAS,SAAS,aAAT,CAAuB,MAAvB,CAAf;AACA,SAAM,OAAO,SAAS,IAAtB;;;AAGA,YAAO,KAAP,CAAa,QAAb,GAAwB,eAAxB;AACA,YAAO,KAAP,CAAa,SAAb,GAAyB,eAAzB;AACA,YAAO,KAAP,CAAa,KAAb,GAAqB,YAArB;;;AAGA,SAAM,YAAY,CAAC,SAAS,OAAO,KAAP,CAAa,GAAtB,CAAnB;;;AAGA,YAAO,SAAP,GAAmB,SAAnB;AACA,UAAK,SAAL,GAAiB,SAAjB;AACD;AAnEY,E","file":"prevent-scroll.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"preventScroll\"] = factory();\n\telse\n\t\troot[\"preventScroll\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b32a68a8b95d80aa06c3\n **/","let disabled = false;\nlet currentPosition, currentOverflow, currentWidth;\n\nexport default {\n  on() {\n    if (disabled) {\n      return;\n    }\n\n    disabled = true;\n\n    const htmlEl = document.querySelector('html');\n    const body = document.body;\n\n    // `window.innerHeight` is the height of the viewport\n    // `body.clientHeight` is the height of the document\n    // If the document fits in the window, then the document\n    // cannot be scrolled, and we don't need to do anything.\n    if (window.innerHeight >= body.clientHeight) {\n      return;\n    }\n\n    // Determine the `scrollTop` to use. Some browsers require checking the\n    // `body`, others use `html`.\n    const bodyScrollTop = body.scrollTop;\n    const htmlScrollTop = htmlEl.scrollTop;\n    let scrollTop = bodyScrollTop ? bodyScrollTop : htmlScrollTop;\n\n    // Store the current value of the htmlEl's styles â€“ we're about to override\n    // them.\n    currentPosition = htmlEl.style.position;\n    currentOverflow = htmlEl.style.overflowY;\n    currentWidth = htmlEl.style.width;\n\n    // Fixing the position of the `htmlEl` prevents the page from scrolling\n    // at all.\n    htmlEl.style.position = 'fixed';\n    // Setting `overflowY` to `scroll` ensures that any scrollbars that are\n    // around stick around. Otherwise, there would be a \"jump\" when the page\n    // becomes unscrollable as the bar would vanish.\n    htmlEl.style.overflowY = 'scroll';\n    // This makes sure that the page doesn't collapse (usually your CSS will\n    // prevent this, but it's best to be safe)\n    htmlEl.style.width = '100%';\n    // Scoot down the `htmlEl` to be in the same place that the user had\n    // scrolled to.\n    htmlEl.style.top = `-${scrollTop}px`;\n  },\n\n  off() {\n    if (!disabled) {\n      return;\n    }\n\n    disabled = false;\n\n    const htmlEl = document.querySelector('html');\n    const body = document.body;\n\n    // Reset `htmlEl` to the original styles.\n    htmlEl.style.position = currentPosition;\n    htmlEl.style.overflowY = currentOverflow;\n    htmlEl.style.width = currentWidth;\n\n    // Retrieve our original scrollTop from the htmlEl's top\n    const scrollTop = -parseInt(htmlEl.style.top);\n    // Return us to the original scroll position. Once again, we set this on\n    // both the `body` and the `htmlEl` to be safe.\n    htmlEl.scrollTop = scrollTop;\n    body.scrollTop = scrollTop;\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/prevent-scroll.js\n **/"],"sourceRoot":""}